/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

//-----imports-----
import java.awt.Color;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import view.PanelLaberinto;
//----------

//codigo
public class GUILaberinto extends javax.swing.JFrame {

    /**
     * Creates new form GUILaberinto
     */
    //----------Variables del tiempo----------
    //especificacion: relacionadas al temporizador
    private Timer seconds;
    private int countDown = 15;//Crea la variable para llevar el tiempo y es inicializada
    //------------
    
    public GUILaberinto() {
        initComponents();

        setLocationRelativeTo(null);//Ubicar la venta al centro
       
       timeCountDown(); // Iniciar el temporizador
    }//fin metodo contructor
    //-----------------------------------
    
    //----------Temporizador----------
    private void timeCountDown() {
        seconds = new Timer(1000, e -> {
            countDown--;//LA variable se reduce poco a poco su cantidad inicializada
            txtTime.setText(String.valueOf(countDown)); // Actualizar el texto del temporizador
            
            if (countDown <= 10) {
                txtTime.setForeground(Color.RED); // Cambiar a rojo cuando queden 10 segundos
                 for (java.awt.Window window : java.awt.Window.getWindows()) {
                     //Esta sección del método se encarga de detectar si se abre una ventana diferente a la actual, y en ese caso, detiene el tiempo.
                    if (window != this && window.isShowing()) {
                        seconds.stop();
                    }
                }//Fin for para parar tiempo
                 
               
            } else {
                txtTime.setForeground(Color.WHITE); // Mantener blanco en el resto del tiempo
                for (java.awt.Window window : java.awt.Window.getWindows()) {
                    //Esta sección del método se encarga de detectar si se abre una ventana diferente a la actual, y en ese caso, detiene el tiempo.
                    if (window != this && window.isShowing()) {
                        seconds.stop();//Detiene el tiempo
                    }
                }//Fin for para parar tiempo
                
            }

            if (countDown == 0) {
                //Esta sección del método se activa cuando el countDown llega a cero, lo que provoca que se abra la ventana de guiLose o derrota
                seconds.stop();
                panelLaberinto1.setFocusable(false); // Deshabilitar el foco en el panel

                // Cerrar todas las ventanas abiertas excepto esta
                for (java.awt.Window window : java.awt.Window.getWindows()) {
                    if (window != this && window.isShowing()) {
                        window.dispose(); // Cierra la ventana si está abierta
                    }
                }

                // Invocar la ventana de derrtota
                SwingUtilities.invokeLater(() -> {
                    GUILose guiLose = new GUILose();
                    guiLose.setVisible(true);
                });
                dispose(); // Cierra la ventana actual
            }
            
        });

        seconds.start(); // Iniciar el temporizador
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLaberinto1 = new view.PanelLaberinto();
        btnVolver = new javax.swing.JButton();
        txtTime = new javax.swing.JLabel();
        imgTimer = new javax.swing.JLabel();
        imgFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(873, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(873, 700));
        getContentPane().setLayout(null);

        panelLaberinto1.setOpaque(false);

        javax.swing.GroupLayout panelLaberinto1Layout = new javax.swing.GroupLayout(panelLaberinto1);
        panelLaberinto1.setLayout(panelLaberinto1Layout);
        panelLaberinto1Layout.setHorizontalGroup(
            panelLaberinto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        panelLaberinto1Layout.setVerticalGroup(
            panelLaberinto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        getContentPane().add(panelLaberinto1);
        panelLaberinto1.setBounds(170, 120, 540, 450);

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/volverPrin.png"))); // NOI18N
        btnVolver.setBorderPainted(false);
        btnVolver.setContentAreaFilled(false);
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver);
        btnVolver.setBounds(720, 600, 130, 60);
        btnVolver.getAccessibleContext().setAccessibleName("btnVolver");

        txtTime.setBackground(new java.awt.Color(255, 255, 255));
        txtTime.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        getContentPane().add(txtTime);
        txtTime.setBounds(170, 62, 40, 20);
        txtTime.getAccessibleContext().setAccessibleName("txtTime");

        imgTimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tiempo.png"))); // NOI18N
        getContentPane().add(imgTimer);
        imgTimer.setBounds(90, 40, 160, 66);
        imgTimer.getAccessibleContext().setAccessibleName("imgTimer");

        imgFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/laberinto-fondo.png"))); // NOI18N
        getContentPane().add(imgFondo);
        imgFondo.setBounds(0, 0, 873, 664);
        imgFondo.getAccessibleContext().setAccessibleName("imgFondo");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // Crea una nueva instancia del JFrame
        GUIPrincipal guiPrincipal = new GUIPrincipal();

        // Establece visible la nueva ventana
        guiPrincipal.setVisible(true);

        // Cierra la ventana actual
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUILaberinto().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel imgFondo;
    private javax.swing.JLabel imgTimer;
    private view.PanelLaberinto panelLaberinto1;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables
}
